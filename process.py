import json
import Connectors
import Transformations
import AutoML
try:
    Adnan_DBFS = Connectors.DBFSConnector.fetch([], {}, "5e96c95f672fce2edcf86fa2", spark,
                                                "{'url': '/Demo/137_instance_demo/Bike_Rental_UCI_dataset.csv', 'file_type': 'Delimeted', 'dbfs_token': 'dapi9900607f95a71a87c0660d2860ef59ea', 'dbfs_domain': 'eastus.azuredatabricks.net', 'delimiter': ',', 'is_header': 'Use Header Line'}")

except Exception as ex:
    print(ex)
try:
    Adnan_AutoFE = Transformations.TransformationMain.run(["5e96c95f672fce2edcf86fa2"], {"5e96c95f672fce2edcf86fa2": Adnan_DBFS}, "5e96c95f672fce2edcf86fa3", spark, json.dumps({"FE": [{"transformationsData": {}, "feature": "instant", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "8718.71", "stddev": "5056.48", "min": "7", "max": "17366", "missing": "0"}}, {"transformationsData": {"feature_label": "dteday"}, "feature": "dteday", "type": "date", "selected": "True", "replaceby": "random", "stats": {"count": "", "mean": "", "stddev": "", "min": "", "max": "", "missing": "0"}, "transformation": "Extract Date"}, {"transformationsData": {}, "feature": "season", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "2.51", "stddev": "1.11", "min": "1", "max": "4", "missing": "0"}}, {"transformationsData": {}, "feature": "yr", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "0.5", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "mnth", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "6.59", "stddev": "3.47", "min": "1", "max": "12", "missing": "0"}}, {"transformationsData": {}, "feature": "hr", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "11.62", "stddev": "6.91", "min": "0", "max": "23", "missing": "0"}}, {"transformationsData": {}, "feature": "holiday", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "0.03", "stddev": "0.17", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "weekday", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "2.96", "stddev": "1.99", "min": "0", "max": "6", "missing": "0"}}, {"transformationsData": {}, "feature": "workingday", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "0.69", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}}, {"transformationsData": {}, "feature": "weathersit", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {
                                                          "count": "1816", "mean": "1.41", "stddev": "0.63", "min": "1", "max": "4", "missing": "0"}}, {"transformationsData": {}, "feature": "temp", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "1816", "mean": "0.49", "stddev": "0.19", "min": "0.02", "max": "0.94", "missing": "0"}, "transformation": ""}, {"transformationsData": {}, "feature": "atemp", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "1816", "mean": "0.47", "stddev": "0.17", "min": "0.0455", "max": "0.8939", "missing": "0"}, "transformation": ""}, {"transformationsData": {}, "feature": "hum", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "1816", "mean": "0.62", "stddev": "0.19", "min": "0.0", "max": "1.0", "missing": "0"}, "transformation": ""}, {"transformationsData": {}, "feature": "windspeed", "type": "real", "selected": "True", "replaceby": "mean", "stats": {"count": "1816", "mean": "0.19", "stddev": "0.12", "min": "0.0", "max": "0.7463", "missing": "0"}, "transformation": ""}, {"transformationsData": {}, "feature": "casual", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "34.63", "stddev": "49.19", "min": "0", "max": "352", "missing": "0"}}, {"transformationsData": {}, "feature": "registered", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "151.09", "stddev": "153.46", "min": "0", "max": "876", "missing": "0"}}, {"transformationsData": {}, "feature": "cnt", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "1816", "mean": "185.72", "stddev": "183.35", "min": "1", "max": "953", "missing": "0"}}, {"feature": "dteday_dayofmonth", "transformation": "", "transformationsData": {}, "type": "numeric", "generated": "True", "selected": "True", "stats": {"count": "1816", "mean": "15.62", "stddev": "8.86", "min": "1", "max": "31", "missing": "0"}}, {"feature": "dteday_month", "transformation": "", "transformationsData": {}, "type": "numeric", "generated": "True", "selected": "True", "stats": {"count": "1816", "mean": "6.59", "stddev": "3.47", "min": "1", "max": "12", "missing": "0"}}, {"feature": "dteday_year", "transformation": "", "transformationsData": {}, "type": "numeric", "generated": "True", "selected": "True", "stats": {"count": "1816", "mean": "2011.5", "stddev": "0.5", "min": "2011", "max": "2012", "missing": "0"}}]}))

except Exception as ex:
    print(ex)
try:
    AutoML.functionClassification(Adnan_AutoFE, ["instant", "dteday", "season", "yr", "mnth", "hr", "holiday",
                                                 "weekday", "workingday", "weathersit", "temp", "atemp", "hum", "windspeed", "casual", "registered"], "cnt")

except Exception as ex:
    print(ex)
